(defwidget music_player []
  (box :class "music-player" :orientation "h" :space-evenly "false"
    (box :class "volume"
      (scale :flipped true
             :min 0.0
             :max 101.0
             :orientation "v"
             :value music_volume
             :onchange "playerctl volume $(awk 'BEGIN {print {} / 100.0}')"))
    (box :class "art" :vexpand false :hexpand false :style "background-image: url('${music_art}');")
    (box :class "info" :orientation "v" :space-evenly false :hexpand true
      (label :class "title"  :limit-width 35 :tooltip music_title  :text music_title)
      (label :class "album"  :limit-width 35 :tooltip music_album  :text music_album)
      (label :class "artist" :limit-width 35 :tooltip music_artist :text music_artist)
      (box :class "controls"
           :orientation "h"
           :space-evenly true
           :vexpand true
        (button :class "prev" :onclick "playerctl previous" "Prev")
        (button :class "play" :onclick "playerctl play-pause" music_status)
        (button :class "next" :onclick "playerctl next" "Next"))
      (box :class "position"
        (scale :min 0
               :max music_length
               :orientation "h"
               :active false
               :value music_position))
      (box :class "time" :orientation "h"
        (label :class "position" :text music_position_text)
        (label :class "div"      :text "/")
        (label :class "length"   :text music_length_text))
      )
    )
  )

; Date variables
(defpoll number_day :interval "1m" "date '+%d'")
(defpoll month :interval "1m" "date '+%b'")
(defpoll month :interval "10h"  "date \"+%b\"")
(defpoll min :interval "10s"  "date \"+%M\"")
(defpoll hour :interval "10s"  "date \"+%H\"")
(defpoll day :interval "15h"  "~/.config/eww/scripts/getday")
(defpoll month_full :interval "15h"  "date \"+%B\"")
(defpoll year_full :interval "15h"  "date \"+%Y\"")

; Music variables
(deflisten music_album  "playerctl --follow metadata --format '{{album}} ({{xesam:contentCreated}})'")
(deflisten music_artist "playerctl --follow metadata --format {{artist}}")
(deflisten music_title  "playerctl --follow metadata --format '{{xesam:trackNumber}} â€“ {{title}}'")
(deflisten music_status "playerctl --follow status")
(deflisten music_art    "playerctl --follow metadata --format {{mpris:artUrl}}")
(deflisten music_volume "playerctl --follow volume --format {{volume*100}}")
(defpoll music_position :interval "0.5s" "playerctl position --format '{{position/1000000}}'")
(deflisten music_length "playerctl --follow metadata --format '{{mpris:length/1000000}}'")
(defpoll music_position_text :interval "1s" "playerctl position --format '{{duration(position)}}'")
(deflisten music_length_text "playerctl --follow metadata --format '{{duration(mpris:length)}}'")

(defwindow music_player :monitor 0 :stacing "fg" :windowtype "normal"
  (music_player))
